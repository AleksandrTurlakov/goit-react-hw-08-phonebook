{"version":3,"file":"static/js/982.2f93bebb.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/GlobalStyle/GlobalStyle.jsx","components/Loader/Loader.jsx","pages/PageContacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  width: 400px;\n  border-style: solid;\n  border-radius: 12px;\n  box-shadow: rgb(0 0 0 / 19%) 0px 8px 20px 0px, rgb(0 0 0 / 23%) 0px 6px 6px;\n  padding: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  text-shadow: 2px 1px 3px #333333;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  height: 30px;\n  margin-top: 4px;\n  border-radius: 6px;\n  border: transparent;\n  border-bottom: groove;\n\n  box-shadow: inset 0px 0px 5px 1px rgba(0, 0, 0, 0.29);\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: bold;\n  width: 150px;\n  height: 30px;\n  border-radius: 10px;\n  border: transparent;\n  text-transform: capitalize;\n  box-shadow: inset 0px 0px 10px 3px rgba(0, 0, 0, 0.69);\n\n  &:hover {\n    background-color: #3e8e41;\n    color: white;\n  }\n\n  &:active {\n    background-color: #3e8e41;\n    box-shadow: 0 5px #666;\n    transform: translateY(4px);\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormWrapper, Label, Input, Button } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contactsOperations';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newContact = { name, phone };\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(`${newContact.name} is already in contact`);\n    } else {\n      dispatch(addContact({ name, phone }));\n    }\n    reset();\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <FormWrapper onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Phone\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </FormWrapper>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  width: 400px;\n  padding-left: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ContactName = styled.p`\n  font-weight: bold;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: bold;\n  min-width: 100px;\n  height: 30px;\n  border-radius: 10px;\n  border: transparent;\n  text-transform: capitalize;\n  box-shadow: inset 0px 0px 10px 3px rgba(0, 0, 0, 0.69);\n\n  &:hover {\n    background-color: rgb(245, 66, 11);\n    color: white;\n  }\n\n  &:active {\n    background-color: rgb(245, 66, 11);\n    box-shadow: -4px 4px #666;\n    transform: translateX(-8px);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ContactsList,\n  ContactsItem,\n  ContactName,\n  Button,\n} from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contactsOperations';\nimport { updateFilter } from '../../redux/filterSlice';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filterName = useSelector(state => state.filter);\n\n  const getFilterContacts = () => {\n    const normalizedFilter = filterName.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filterContacts = getFilterContacts();\n\n  const handleClick = id => {\n    dispatch(deleteContact(id));\n    dispatch(updateFilter(''));\n  };\n\n  return (\n    <ContactsList>\n      {filterContacts.map(({ name, id, phone }) => (\n        <ContactsItem key={id}>\n          <ContactName>\n            {name}: {phone}\n          </ContactName>\n          <Button onClick={() => handleClick(id)}>Delete</Button>\n        </ContactsItem>\n      ))}\n    </ContactsList>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleleteContact: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  padding-left: 20px;\n  text-shadow: 2px 1px 3px #333333;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  height: 30px;\n  margin-top: 4px;\n  border-radius: 6px;\n  border: transparent;\n  border-bottom: groove;\n\n  box-shadow: inset 0px 0px 5px 1px rgba(0, 0, 0, 0.29);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.filter);\n  const changeFilter = evt => {\n    dispatch(setFilter(evt.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by Name\n      <Input type=\"text\" value={value} onChange={changeFilter} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { createGlobalStyle } from 'styled-components';\nimport 'modern-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n  margin-top: 20px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  display: flex;\n  justify-content: center;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n  margin: 0;\n}\n\nul,\nol {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n`;\n","import { RotatingSquare } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <RotatingSquare\n      height=\"100\"\n      width=\"200\"\n      color=\"#565a56\"\n      ariaLabel=\"rotating-square-loading\"\n      strokeWidth=\"4\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n","import { Form } from '../components/Form/Form';\nimport { Contacts } from '../components/Contacts/Contacts';\nimport { Filter } from '../components/Filter/Filter';\nimport { GlobalStyle } from '../components/GlobalStyle/GlobalStyle';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contactsOperations';\nimport { useEffect } from 'react';\nimport { Loader } from '../components/Loader/Loader';\n\nexport default function PageContacts() {\n  const { items, isLoading, error } = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <GlobalStyle />\n      <Form />\n      {error ? (\n        <h2>{error}</h2>\n      ) : (\n        <>\n          <h2>\n            {isLoading ? (\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Loader />\n              </div>\n            ) : (\n              `In youre phonebook - ${items.length} Contacts`\n            )}\n          </h2>\n          <Filter />\n          {items.length === 0 && !isLoading ? (\n            <h2>You don't have saved contacts</h2>\n          ) : (\n            <Contacts />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["FormWrapper","styled","Label","Input","Button","Form","dispatch","useDispatch","contacts","useSelector","state","items","useState","name","setName","phone","setPhone","handleChange","evt","currentTarget","value","reset","onSubmit","preventDefault","newContact","find","contact","toLowerCase","alert","addContact","type","pattern","title","required","onChange","ContactsList","ContactsItem","ContactName","Contacts","filterName","filter","filterContacts","normalizedFilter","includes","getFilterContacts","map","id","onClick","deleteContact","updateFilter","handleClick","Filter","setFilter","GlobalStyle","createGlobalStyle","Loader","height","width","color","ariaLabel","strokeWidth","wrapperStyle","wrapperClass","visible","PageContacts","isLoading","error","useEffect","fetchContacts","style","display","justifyContent","alignItems","length"],"sourceRoot":""}